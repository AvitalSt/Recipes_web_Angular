import { Component, Input } from '@angular/core';
import { Recipe } from '../models/recipe.model';
import { RecipeService } from '../service/recipe.service';
import { ActivatedRoute, Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DurationFormatPipePipe } from "../pipes/duration-format-pipe.pipe";

@Component({
  selector: 'app-recipe-details',
  standalone: true,
  templateUrl: './recipe-details.component.html',
  styleUrls: ['./recipe-details.component.scss'],
  imports: [CommonModule, FormsModule, DurationFormatPipePipe]
})
export class RecipeDetailsComponent {
  idU!: number;
  idR!: number;
  idUserRecipe!: number;
  difficultyArray: number[] = [];
  recipe!: Recipe;
  category: string[] = ["◊¢◊ô◊ß◊®◊ô◊™", "◊™◊ï◊°◊§◊™", "◊ß◊ô◊†◊ï◊ó"];
  showToOwner!: boolean;
  showDeleteButton: boolean = false;

  currentUser = sessionStorage.getItem('currentUser');


  constructor(private _recipeService: RecipeService, private _router: Router, private _route: ActivatedRoute) { }

  componentIconMap: { [key: string]: string } = {
    '◊û◊ú◊ó': 'üßÇ',
    '◊°◊ï◊õ◊®': 'üç¨',
    '◊ë◊¶◊ú': 'üßÖ',
    '◊©◊ï◊ù': 'üßÑ',
    '◊§◊ú◊§◊ú': 'üå∂Ô∏è',
    '◊í◊ñ◊®': 'ü•ï',
    '◊û◊ô◊ù': 'üíß',
    '◊ó◊ú◊ë': 'ü•õ',
    '◊ß◊û◊ó': 'üåæ',
    '◊ë◊ô◊¶◊ô◊ù': 'ü•ö',
    '◊©◊û◊ü': 'üõ¢Ô∏è',
    '◊ê◊ï◊®◊ñ': 'üçö',
    '◊û◊ß◊®◊ï◊†◊ô': 'üçù',
    '◊™◊§◊ï◊ó◊ô ◊ê◊ì◊û◊î': 'ü•î',
    '◊™◊ô◊®◊°': 'üåΩ',
    '◊ë◊®◊ï◊ß◊ï◊ú◊ô': 'ü•¶',
    '◊§◊ò◊®◊ô◊ï◊™': 'üçÑ',
    '◊ì◊ë◊©': 'üçØ',
    '◊ú◊ó◊ù': 'ü•ñ',
    '◊ñ◊¢◊™◊®': 'üåø',
    '◊®◊ï◊ñ◊û◊®◊ô◊ü': 'üåø',
    '◊ë◊ñ◊ô◊ú◊ô◊ß◊ï◊ù': 'üåø',
    '◊§◊ò◊®◊ï◊ñ◊ô◊ú◊ô◊î': 'üåø',
    '◊ß◊ï◊ß◊ï◊°': 'ü••',
    '◊©◊ß◊ì◊ô◊ù': 'üå∞',
    '◊í◊ë◊ô◊†◊î': 'üßÄ',
    '◊ë◊©◊®': 'üçñ',
    '◊ì◊í': 'üêü',
    '◊¢◊ï◊£': 'üêì',
    '◊ß◊ô◊†◊û◊ï◊ü': 'üå∂Ô∏è',
    '◊ï◊ê◊†◊ô◊ú': 'üå∫',
    '◊ß◊ï◊ß◊ê◊ï': 'üç´',
    '◊ß◊§◊î': '‚òï',
    '◊™◊î': 'üçµ',
    '◊ê◊§◊®◊°◊ß': 'üçë',
    '◊™◊ï◊™': 'üçì',
    '◊ê◊†◊†◊°': 'üçç',
    '◊¢◊í◊ë◊†◊ô◊ô◊î': 'üçÖ',
    '◊ú◊ô◊û◊ï◊ü': 'üçã',
    '◊ì◊ï◊ë◊ì◊ë◊ü': 'üçí',
    '◊ê◊ë◊ò◊ô◊ó': 'üçâ',
    '◊ë◊†◊†◊î': 'üçå',
    '◊™◊§◊ï◊ó': 'üçè',
    '◊ß◊ô◊ï◊ï◊ô': 'ü•ù',
    '◊§◊ò◊ú': 'ü´ê',
    '◊™◊§◊ï◊ó ◊¢◊•': 'üçè',
    '◊§◊ô◊¶◊î': 'üçï',
    '◊§◊°◊ò◊î': 'üçù',
    '◊î◊û◊ë◊ï◊®◊í◊®': 'üçî',
    '◊ß◊¶◊ë': 'üçö',
    '◊ë◊ô◊®◊î': 'üç∫',
    '◊ô◊ô◊ü': 'üç∑',
    '◊°◊ï◊©◊ô': 'üç±',
    '◊û◊®◊ß': 'üç≤',
    '◊ß◊¶◊ô◊¶◊ï◊™': 'üç¢',
    '◊í◊®◊ô◊ú': 'ü•©',
    '◊°◊ò◊ô◊ô◊ß': 'ü•©',
    '◊ì◊í◊ô◊ù': 'üêü',
    '◊ß◊ï◊ß◊ò◊ô◊ô◊ú': 'üçπ',
    '◊©◊†◊ô◊¶◊ú': 'üçñ',
  };
  
  ngOnInit() {
    this._route.params.subscribe((params) => {
      this.idU = params['idU'];
      this.idR = params['idR'];

      if (this.idU && this.idR) {
        this._recipeService.getRecipeByIdFromServer(this.idR).subscribe({
          next: (res) => {
            this.recipe = res;
            this.recipe.idC = res.idC;
            this.idUserRecipe = Number(res.idU);
            this.showDeleteButton = Number(this.idUserRecipe) === Number(this.currentUser) == true;
          },
          error: (err) => {
            console.error(err);
          }
        });
      }
    });
  }

  getStarRating(difficulty: number): string {
    let stars = '';
    const fullStar = '‚≠ê';
    const emptyStar = '‚òÜ';

    for (let i = 0; i < difficulty; i++) {
      stars += fullStar;
    }
    for (let i = difficulty; i < 5; i++) {
      stars += emptyStar;
    }
    return stars;
  }

  getIconCategory(idC: number): string {
    switch (idC) {
      case 0:
        return 'üç≤ ◊û◊†◊î ◊¢◊ô◊ß◊®◊ô◊™';
      case 1:
        return 'ü•¶ ◊™◊ï◊°◊§◊™';
      case 2:
        return 'üç® ◊ß◊ô◊†◊ï◊ó';
      default:
        return '';
    }
  }

  getComponentIcon(componentName: string): string {
    return this.componentIconMap[componentName] || '';
  }

  toDelete() {
    this._recipeService.deleteRecipeFromServer(this.idR).subscribe({
      next: (res) => {
        this._router.navigate(['/allRecipe', { idU: this.idU }]);
      },
      error: (err) => {
        console.error(err);
      }
    });
  }

  toEdit() {
    this._router.navigate(['/editRecipe', { idU: this.idU, idR: this.idR }]);
  }
}
